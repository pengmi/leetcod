/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ret;
        
        auto temp1=l1;
        auto temp2=l2;
        
        stack<int> sl1;
        stack<int> sl2;
        
        vector<int> arr1(100,0),arr2(100,0);
        
        int index=0;
        while(l1)
        {
            arr1[index++]=l1->val;
            l1=l1->next;
        }
        index=0;
        while(l2)
        {
            arr2[index++]=l2->val;
            l2=l2->next;
        }
        
        int num=0;
        
        addNumArr(arr1,arr2,num);
        
        ret=new ListNode(arr1[0]);
        auto end=ret;
        for(int i=1;i<=num;i++)
        {
            auto temp=new ListNode(arr1[i]);
            end->next=temp;
            end=end->next;
        }

        return ret;
    }
    
    vector<int>& addNumArr(vector<int>& arr1,vector<int>& arr2,int &num)
    {
        for(int i=0;i<100;++i)
        {
            
            int temp=arr1[i]+arr2[i];
            if(temp>9)
            {
                arr1[i]=temp%10;
                arr1[i+1]+=temp/10;
                num=i+1;
            }
            else if(temp>0)
            {
                arr1[i]+=arr2[i];
                num=i;
            }
        }
        return arr1;
    }
};
