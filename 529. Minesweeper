class Solution {
public:
	vector<vector<char>> updateBoard(vector<vector<char>>& board, vector<int>& click) {
		if (board[click[0]][click[1]] == 'M')
		{
			board[click[0]][click[1]] = 'X';
			return board;
		}
		if (board[click[0]][click[1]] == 'E')
		{
			updateB(board, click[0], click[1]);
		}
        
		return board;
	}
    bool isValid(vector<vector<char>>& board,int row,int col)
    {
        if (row<0 || col<0 || row>board.size()-1 || col>board[0].size()-1)
			return false;
        return true;
    }

	void updateB(vector<vector<char>>& board, int row, int col)
	{
		if(!isValid(board,row,col))
            return;
        
		if (board[row][col] == 'E')
		{
            int num=0;
            if(isValid(board,row-1,col)&&board[row-1][col]=='M')num++;
            if(isValid(board,row+1,col)&&board[row+1][col]=='M')num++;
            if(isValid(board,row,col-1)&&board[row][col-1]=='M')num++;
            if(isValid(board,row,col+1)&&board[row][col+1]=='M')num++;
            if(isValid(board,row-1,col-1)&&board[row-1][col-1]=='M')num++;
            if(isValid(board,row+1,col+1)&&board[row+1][col+1]=='M')num++;
            if(isValid(board,row-1,col+1)&&board[row-1][col+1]=='M')num++;
            if(isValid(board,row+1,col-1)&&board[row+1][col-1]=='M')num++;
            if(!num)
            {
                board[row][col] = 'B';
                updateB(board,row-1,col);
                updateB(board,row+1,col);
                updateB(board,row,col-1);
                updateB(board,row,col+1);
                updateB(board,row-1,col-1);
                updateB(board, row+1,col-1);
                updateB(board, row-1,col+1);
                updateB(board, row+1,col+1);
            }
            else
            {
                board[row][col]='0'+num;
            }
		}
	}
	
};
