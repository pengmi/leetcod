class Solution {
public:
    vector<string> letterCombinations(string digits) {
       vector<string> ret;
		unordered_map <int, string> digMap = { { 2,"abc" },{ 3,"def" },{ 4,"ghi" },{ 5,"jkl" },{ 6,"mno" },{ 7,"pqrs" },{ 8,"tuv" },{ 9,"wxyz" } };

		for (int i = 0; i<digits.length(); ++i)
		{
			if (i == 0)
			{
				auto vec = digMap[digits[i] - '0'];
				for (int j = 0; j<vec.length(); ++j)
				{
					char temp[1];
					temp[0] = vec[j];
					ret.push_back(string(temp,1));
				}
			}
			else
			{
				auto tmpRet = ret;
				int size = ret.size();
				auto vec = digMap[digits[i] - '0'];
				for (int j = 0; j<vec.length(); ++j)
				{
					if (j == 0)
					{
						for (int k = 0; k<size; ++k)
						{
							ret[k] += vec[j];
						}
					}
					else
					{
						for (int k = 0; k<size; ++k)
						{
							ret.push_back(tmpRet[k] + vec[j]);
						}
					}
				}
			}
		}
		return ret;
        
    }
    
};
