class Solution {
public:
    double largestTriangleArea(vector<vector<int>>& points) {
        double ret=0.0;
        int size=points.size();
        
        for(int i=0;i<size;++i)
        {
            for(int j=i+1;j<size;++j)
            {
                for(int k=j+1;k<size;++k)
                {
                    auto id=triangleArea(points[i],points[j],points[k]);
                    ret=max(ret,id);
                }
            }
        }
        return ret;
    }
    double triangleArea(const vector<int>& a,const vector<int>& b,const vector<int>& c)
    {
        double ta=dist(a[0],a[1],b[0],b[1]);
        double tb=dist(b[0],b[1],c[0],c[1]);
        double tc=dist(a[0],a[1],c[0],c[1]);

        double s=(ta+tb+tc)/2;
        return (double)sqrt(s*(s-ta)*(s-tb)*(s-tc));
        
    }
    double dist(int xa,int ya,int xb,int yb)
    {
        return (double)sqrt((xa-xb)*(xa-xb)+(ya-yb)*(ya-yb));
    }
};
